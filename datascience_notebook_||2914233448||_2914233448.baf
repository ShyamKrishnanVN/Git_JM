{"featureSet":null,"errorCode":null,"notebookModels":null,"tools":null,"notebookModel":null,"knowledgeBase":null,"stackTrace":null,"notebookContent":"{\"sucess\":true,\"content\":{\"cells\":[{\"cell_type\":\"code\",\"metadata\":{\"id\":\"0_0.6672303347442575\"},\"execution_count\":0,\"source\":[\"import random\\n\\ndef number_fun_fact(n):\\n    facts = [\\n        f\\\"{n} is {'even' if n % 2 == 0 else 'odd'}.\\\",\\n        f\\\"{n} squared is {n ** 2}.\\\",\\n        f\\\"{n} cubed is {n ** 3}.\\\",\\n        f\\\"The sum of digits in {n} is {sum(int(d) for d in str(abs(n)))}.\\\",\\n        f\\\"{n} is {'a prime number' if is_prime(n) else 'not a prime number'}.\\\",\\n        f\\\"{n} in binary is {bin(n)[2:]}.\\\",\\n    ]\\n    return random.choice(facts)\\n\\ndef is_prime(n):\\n    if n < 2:\\n        return False\\n    for i in range(2, int(n ** 0.5) + 1):\\n        if n % i == 0:\\n            return False\\n    return True\\n\\n# Example usage:\\nprint(number_fun_fact(17))\\n\"],\"outputs\":[{\"name\":\"stdout\",\"text\":\"17 is a prime number.\\n\",\"output_type\":\"stream\"}]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"2914233448_0.8949082796486258\"},\"execution_count\":1,\"source\":[\"import random\\n\\ndef number_personality(n):\\n    moods = []\\n\\n    if n == 0:\\n        moods.append(\\\"mysterious and undefined\\\")\\n    elif n < 0:\\n        moods.append(\\\"moody but deep\\\")\\n    elif n % 2 == 0:\\n        moods.append(\\\"calm and balanced\\\")\\n    else:\\n        moods.append(\\\"rebellious and quirky\\\")\\n\\n    if is_prime(n):\\n        moods.append(\\\"independent thinker\\\")\\n    elif n > 1 and not is_prime(n):\\n        moods.append(\\\"loves company (composite)\\\")\\n\\n    if n % 10 == 0:\\n        moods.append(\\\"well-rounded\\\")\\n\\n    if is_perfect_square(n):\\n        moods.append(\\\"perfectly square\\\")\\n\\n    return f\\\"Number {n} has a personality that's \\\" + \\\", \\\".join(moods) + \\\".\\\"\\n\\ndef is_prime(n):\\n    if n < 2:\\n        return False\\n    for i in range(2, int(n ** 0.5) + 1):\\n        if n % i == 0:\\n            return False\\n    return True\\n\\ndef is_perfect_square(n):\\n    return n >= 0 and int(n ** 0.5) ** 2 == n\\n\\n# Example usage\\nprint(number_fun_fact(36))\\nprint(number_personality(36))\\n\"],\"outputs\":[{\"name\":\"stdout\",\"text\":\"36 cubed is 46656.\\nNumber 36 has a personality that's calm and balanced, loves company (composite), perfectly square.\\n\",\"output_type\":\"stream\"}]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"2914233448_0.8244089726979441\"},\"execution_count\":null,\"source\":[\"before vcs\"],\"outputs\":[]}],\"metadata\":{},\"nbformat\":4,\"nbformat_minor\":2}}","autoMLs":null,"scripts":null,"notebook":{"mongoQL":null,"updatedBy":1762654271,"data":"{\"datasets\":[],\"uncheckeddatasets\":[],\"code\":[{\"id\":\"0_0.6672303347442575\",\"conflict\":\"false\",\"code\":\"import random\\n\\ndef number_fun_fact(n):\\n    facts = [\\n        f\\\"{n} is {'even' if n % 2 == 0 else 'odd'}.\\\",\\n        f\\\"{n} squared is {n ** 2}.\\\",\\n        f\\\"{n} cubed is {n ** 3}.\\\",\\n        f\\\"The sum of digits in {n} is {sum(int(d) for d in str(abs(n)))}.\\\",\\n        f\\\"{n} is {'a prime number' if is_prime(n) else 'not a prime number'}.\\\",\\n        f\\\"{n} in binary is {bin(n)[2:]}.\\\",\\n    ]\\n    return random.choice(facts)\\n\\ndef is_prime(n):\\n    if n < 2:\\n        return False\\n    for i in range(2, int(n ** 0.5) + 1):\\n        if n % i == 0:\\n            return False\\n    return True\\n\\n# Example usage:\\nprint(number_fun_fact(17))\\n\",\"count\":1,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"2914233448_0.8949082796486258\",\"conflict\":\"false\",\"code\":\"import random\\n\\ndef number_personality(n):\\n    moods = []\\n\\n    if n == 0:\\n        moods.append(\\\"mysterious and undefined\\\")\\n    elif n < 0:\\n        moods.append(\\\"moody but deep\\\")\\n    elif n % 2 == 0:\\n        moods.append(\\\"calm and balanced\\\")\\n    else:\\n        moods.append(\\\"rebellious and quirky\\\")\\n\\n    if is_prime(n):\\n        moods.append(\\\"independent thinker\\\")\\n    elif n > 1 and not is_prime(n):\\n        moods.append(\\\"loves company (composite)\\\")\\n\\n    if n % 10 == 0:\\n        moods.append(\\\"well-rounded\\\")\\n\\n    if is_perfect_square(n):\\n        moods.append(\\\"perfectly square\\\")\\n\\n    return f\\\"Number {n} has a personality that's \\\" + \\\", \\\".join(moods) + \\\".\\\"\\n\\ndef is_prime(n):\\n    if n < 2:\\n        return False\\n    for i in range(2, int(n ** 0.5) + 1):\\n        if n % i == 0:\\n            return False\\n    return True\\n\\ndef is_perfect_square(n):\\n    return n >= 0 and int(n ** 0.5) ** 2 == n\\n\\n# Example usage\\nprint(number_fun_fact(36))\\nprint(number_personality(36))\\n\",\"count\":2,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"2914233448_0.8244089726979441\",\"pre_cell_id\":\"2914233448_0.8949082796486258\",\"is_pre_cell\":true,\"succORerr\":false,\"type\":\"code\",\"code\":\"before vcs\",\"count\":0,\"mode\":\"editor\",\"result\":\"\",\"outputArray\":[],\"image\":\"\",\"error\":\"\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"lineNumber\":false,\"laodmodel\":false,\"loader\":false,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"secret\":[],\"markDowns\":false}],\"kernalID\":\"bb9cf1db-2e8b-4703-92c4-7add73551d56\",\"Algorithms\":[],\"isScheduled\":0,\"last_modified_date\":\"\"}","isImported":0,"workSpaceKey":"","customComponentscript":"","description":"","lastcommittedDate":1749808800917,"isScheduled":null,"committedBy":1762654271,"type":1,"uuid":"60001749808800925","loggedUserId":null,"spaceKey":"6000","migrationId":null,"path":"","lastUpdatedDate":1749809314036,"createdDate":1749808800917,"createdBy":1762654271,"notebookName":"test","id":2914233448,"projectId":2914073317,"isShared":null,"status":1},"featureSets":null,"autoML":null,"superFeatureSet":null,"errorMessage":null,"message":"Successfully retrived!","notebookModelAsApi":null,"notebookScriptAsApi":null,"tool":null,"notebookModelAsApis":null,"success":true,"knowledgeBases":null,"notebooks":null,"customNotebookScript":null,"superFeatureSets":null,"messageCode":null,"bizvizNotebook":null,"bizvizNotebooks":null}
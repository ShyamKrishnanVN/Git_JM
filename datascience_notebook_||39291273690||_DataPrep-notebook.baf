{"dslabserviceresp":{"queryService":[],"bizvizWorkspace":"{\"reserv1\":\"\",\"reserv2\":\"\",\"reserv3\":\"\",\"reserv4\":\"\",\"reserv5\":\"\",\"createdDate\":1724908868992,\"isActive\":0,\"lastUpdatedDate\":null,\"active\":1,\"migrationId\":null,\"loggedUserId\":null,\"mongoQL\":null,\"id\":20282525387,\"name\":\"Sanity Project 10 \",\"count\":null,\"parentId\":null,\"userId\":\"48201728\",\"isFile\":false,\"infoJson\":\"{\\\"external_libraries\\\":\\\"\\\",\\\"confDetails\\\":{\\\"high\\\":{\\\"nonspark\\\":{\\\"request\\\":{\\\"memory\\\":\\\"2048Mi\\\",\\\"cpu\\\":\\\"1000m\\\"},\\\"limit\\\":{\\\"memory\\\":\\\"4048Mi\\\",\\\"cpu\\\":\\\"2500m\\\"}}},\\\"low\\\":{\\\"realtime\\\":{\\\"nonspark\\\":{\\\"request\\\":{\\\"memory\\\":\\\"1024Mi\\\",\\\"cpu\\\":\\\"500m\\\"},\\\"limit\\\":{\\\"memory\\\":\\\"1024Mi\\\",\\\"cpu\\\":\\\"1000m\\\"}}}},\\\"medium\\\":{\\\"nonspark\\\":{\\\"request\\\":{\\\"memory\\\":\\\"4096Mi\\\",\\\"cpu\\\":\\\"1000m\\\"},\\\"limit\\\":{\\\"memory\\\":\\\"8192Mi\\\",\\\"cpu\\\":\\\"2000m\\\"}}}},\\\"idle_shutdown\\\":\\\"30m\\\",\\\"project_url\\\":\\\"ShyamKrishnanVN/Git_JM\\\",\\\"project_name\\\":\\\"Sanity Project 10 \\\",\\\"modelCount\\\":1,\\\"resource_allocation\\\":\\\"medium\\\",\\\"configured_branch\\\":\\\"main\\\",\\\"apiImageName\\\":\\\"371194629034.dkr.ecr.ap-south-1.amazonaws.com/rel/dsmodelapi\\\",\\\"dataSetsCount\\\":8,\\\"gpuType\\\":\\\"\\\",\\\"imageVersion\\\":\\\"9.5.0\\\",\\\"imageName\\\":\\\"371194629034.dkr.ecr.ap-south-1.amazonaws.com/rel/dsnotebook-tensorflow\\\",\\\"apiImageVersion\\\":\\\"9.5.0\\\",\\\"notebookCount\\\":3,\\\"appName\\\":\\\"\\\",\\\"git_project\\\":\\\"\\\",\\\"removedLibraries\\\":\\\"\\\",\\\"isGitsyncProject\\\":false,\\\"utilsCount\\\":0,\\\"environment\\\":\\\"PythonTensorFlow\\\",\\\"project_description\\\":\\\"Sanity\\\",\\\"Algorithms\\\":[\\\"Regression\\\",\\\"Classification\\\",\\\"Forecasting\\\",\\\"Unsupervised\\\",\\\"Natural Language Processing\\\"],\\\"gpuLimit\\\":\\\"\\\",\\\"automlCount\\\":0,\\\"projectLabel\\\":\\\"Git_JM\\\",\\\"branchLabel\\\":\\\"main\\\"}\",\"spaceKey\":\"1112\",\"type\":10,\"status\":1,\"contentJson\":\"[{\\\"queryservicename\\\":\\\"df_Order_Sales.csv\\\",\\\"id\\\":39370987077,\\\"type\\\":\\\"Data Sandbox\\\",\\\"uuid\\\":\\\"11121732515925346\\\",\\\"extenstion\\\":\\\"csv\\\",\\\"fileType\\\":\\\"artifact\\\",\\\"dataSourceType\\\":\\\"csv\\\",\\\"createdDate\\\":1732515925000},{\\\"queryservicename\\\":\\\"df_Order_Sales.json\\\",\\\"id\\\":39371026462,\\\"type\\\":\\\"Data Sandbox\\\",\\\"uuid\\\":\\\"11121732515930696\\\",\\\"extenstion\\\":\\\"json\\\",\\\"fileType\\\":\\\"artifact\\\",\\\"dataSourceType\\\":\\\"json\\\",\\\"createdDate\\\":1732515930000},{\\\"queryservicename\\\":\\\"df_Order_Sales.txt\\\",\\\"id\\\":39371048297,\\\"type\\\":\\\"Data Sandbox\\\",\\\"uuid\\\":\\\"11121732515935515\\\",\\\"extenstion\\\":\\\"txt\\\",\\\"fileType\\\":\\\"artifact\\\",\\\"dataSourceType\\\":\\\"txt\\\",\\\"createdDate\\\":1732515935000},{\\\"id\\\":39266988307,\\\"uuid\\\":\\\"11121732427001986\\\",\\\"createdDate\\\":1732426995785,\\\"dataSourceType\\\":\\\"mysql\\\",\\\"type\\\":\\\"Feature Store\\\",\\\"queryservicename\\\":\\\"FS_V1\\\",\\\"version\\\":\\\"3\\\",\\\"superFeatureSetId\\\":39264606715},{\\\"id\\\":39265013627,\\\"uuid\\\":\\\"11121732426579213\\\",\\\"createdDate\\\":1732426438277,\\\"dataSourceType\\\":\\\"mysql\\\",\\\"type\\\":\\\"Feature Store\\\",\\\"queryservicename\\\":\\\"FS_V1\\\",\\\"version\\\":\\\"2\\\",\\\"superFeatureSetId\\\":39264606715},{\\\"id\\\":39264607781,\\\"uuid\\\":\\\"11121732426381877\\\",\\\"createdDate\\\":1732426247646,\\\"dataSourceType\\\":\\\"mysql\\\",\\\"type\\\":\\\"Feature Store\\\",\\\"queryservicename\\\":\\\"FS_V1\\\",\\\"version\\\":\\\"1\\\",\\\"superFeatureSetId\\\":39264606715},{\\\"id\\\":39269148194,\\\"uuid\\\":\\\"11121732427667526\\\",\\\"createdDate\\\":1732427538070,\\\"dataSourceType\\\":\\\"mysql\\\",\\\"type\\\":\\\"Feature Store\\\",\\\"queryservicename\\\":\\\"FS_V1\\\",\\\"version\\\":\\\"4\\\",\\\"superFeatureSetId\\\":39264606715},{\\\"queryservicename\\\":\\\"Order_Sales\\\",\\\"id\\\":6086338705,\\\"type\\\":\\\"Data Sandbox\\\",\\\"uuid\\\":\\\"11121719551180627\\\",\\\"extenstion\\\":\\\"Data Sandbox\\\",\\\"fileType\\\":\\\"\\\",\\\"dataSourceType\\\":\\\"Data Sandbox\\\"},{\\\"createdDate\\\":\\\"2024-08-27 09:17:46\\\",\\\"id\\\":19798665762,\\\"type\\\":\\\"Data Sets\\\",\\\"queryservicename\\\":\\\"NLP_filter\\\",\\\"uuid\\\":\\\"11111724750266141\\\",\\\"dataSourceType\\\":\\\"mysql\\\"},{\\\"createdDate\\\":1724654206000,\\\"extenstion\\\":\\\"csv\\\",\\\"id\\\":19387472600,\\\"type\\\":\\\"Data Sandbox\\\",\\\"queryservicename\\\":\\\"Covid_data\\\",\\\"uuid\\\":\\\"11111724654203699\\\",\\\"fileType\\\":\\\"\\\",\\\"dataSourceType\\\":\\\"csv\\\"},{\\\"createdDate\\\":1722936388000,\\\"extenstion\\\":\\\"csv\\\",\\\"id\\\":15380549391,\\\"type\\\":\\\"Data Sandbox\\\",\\\"queryservicename\\\":\\\"PA\\\",\\\"uuid\\\":\\\"11111722936388595\\\",\\\"fileType\\\":\\\"\\\",\\\"dataSourceType\\\":\\\"csv\\\"},{\\\"extenstion\\\":\\\"Data Sandbox\\\",\\\"id\\\":38928409,\\\"type\\\":\\\"Data Sandbox\\\",\\\"queryservicename\\\":\\\"Hiring_data\\\",\\\"uuid\\\":\\\"11111687770981000\\\",\\\"fileType\\\":\\\"\\\",\\\"dataSourceType\\\":\\\"Data Sandbox\\\"},{\\\"createdDate\\\":\\\"2024-07-15 10:34:29\\\",\\\"id\\\":9528690114,\\\"type\\\":\\\"Data Sets\\\",\\\"queryservicename\\\":\\\"Oracle_data\\\",\\\"uuid\\\":\\\"11111721039669612\\\",\\\"dataSourceType\\\":\\\"oracle\\\"},{\\\"createdDate\\\":1721112793681,\\\"id\\\":9693206412,\\\"type\\\":\\\"Feature Store\\\",\\\"uuid\\\":\\\"11111721112829222\\\",\\\"queryservicename\\\":\\\"Feature store sample\\\",\\\"version\\\":\\\"1\\\",\\\"superFeatureSetId\\\":9693205371,\\\"dataSourceType\\\":\\\"mysql\\\"},{\\\"createdDate\\\":1721112891730,\\\"id\\\":9695074228,\\\"type\\\":\\\"Feature Store\\\",\\\"uuid\\\":\\\"11111721112896812\\\",\\\"queryservicename\\\":\\\"Feature store sample\\\",\\\"version\\\":\\\"2\\\",\\\"superFeatureSetId\\\":9693205371,\\\"dataSourceType\\\":\\\"mysql\\\"},{\\\"extenstion\\\":\\\"xlsx\\\",\\\"id\\\":103907494,\\\"type\\\":\\\"Data Sandbox\\\",\\\"queryservicename\\\":\\\"Order Sales\\\",\\\"uuid\\\":\\\"11111716887391738\\\",\\\"fileType\\\":\\\"\\\"}]\",\"templateJson\":\"\",\"isShared\":null,\"updatedBy\":\"48201728\",\"uuid\":\"11111687761334437\",\"createdUserName\":null}","envVariables":[],"utility":"[]","utilityContent":"{}","sandboxService":[],"notebookContent":"{\"nbformat_minor\":2,\"metadata\":{},\"cells\":[{\"outputs\":[{\"metadata\":{},\"data\":{\"text/html\":[\"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n<\\/style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th><\\/th>\\n      <th>customerID<\\/th>\\n      <th>gender<\\/th>\\n      <th>gender_label_encoding_1<\\/th>\\n      <th>SeniorCitizen<\\/th>\\n      <th>Partner<\\/th>\\n      <th>Dependents<\\/th>\\n      <th>tenure<\\/th>\\n      <th>PhoneService<\\/th>\\n      <th>MultipleLines<\\/th>\\n      <th>InternetService<\\/th>\\n      <th>OnlineSecurity<\\/th>\\n      <th>OnlineBackup<\\/th>\\n      <th>DeviceProtection<\\/th>\\n      <th>TechSupport<\\/th>\\n      <th>StreamingTV<\\/th>\\n      <th>StreamingMovies<\\/th>\\n      <th>Contract<\\/th>\\n      <th>PaperlessBilling<\\/th>\\n      <th>PaymentMethod<\\/th>\\n      <th>MonthlyCharges<\\/th>\\n      <th>TotalCharges<\\/th>\\n      <th>Churn<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n  <tbody>\\n    <tr>\\n      <th>0<\\/th>\\n      <td>0002ORFBO<\\/td>\\n      <td>Female<\\/td>\\n      <td>0<\\/td>\\n      <td>0<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>9<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>DSL<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>One year<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Mailed check<\\/td>\\n      <td>65.60<\\/td>\\n      <td>593.30<\\/td>\\n      <td>No<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>1<\\/th>\\n      <td>0003MKNFE<\\/td>\\n      <td>Male<\\/td>\\n      <td>1<\\/td>\\n      <td>0<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>9<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>DSL<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Monthtomonth<\\/td>\\n      <td>No<\\/td>\\n      <td>Mailed check<\\/td>\\n      <td>59.90<\\/td>\\n      <td>542.40<\\/td>\\n      <td>No<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>2<\\/th>\\n      <td>0004TLHLJ<\\/td>\\n      <td>Male<\\/td>\\n      <td>1<\\/td>\\n      <td>0<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>4<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>Fiber optic<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>Monthtomonth<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Electronic check<\\/td>\\n      <td>73.90<\\/td>\\n      <td>280.85<\\/td>\\n      <td>Yes<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>3<\\/th>\\n      <td>0011IGKFF<\\/td>\\n      <td>Male<\\/td>\\n      <td>1<\\/td>\\n      <td>1<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>13<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>Fiber optic<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Monthtomonth<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Electronic check<\\/td>\\n      <td>98.00<\\/td>\\n      <td>1237.85<\\/td>\\n      <td>Yes<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>4<\\/th>\\n      <td>0013EXCHZ<\\/td>\\n      <td>Female<\\/td>\\n      <td>0<\\/td>\\n      <td>1<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>3<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>Fiber optic<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>Monthtomonth<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Mailed check<\\/td>\\n      <td>83.90<\\/td>\\n      <td>267.40<\\/td>\\n      <td>Yes<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>...<\\/th>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>7027<\\/th>\\n      <td>9987LUTYD<\\/td>\\n      <td>Female<\\/td>\\n      <td>0<\\/td>\\n      <td>0<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>13<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>DSL<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>One year<\\/td>\\n      <td>No<\\/td>\\n      <td>Mailed check<\\/td>\\n      <td>55.15<\\/td>\\n      <td>742.90<\\/td>\\n      <td>No<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>7028<\\/th>\\n      <td>9992RRAMN<\\/td>\\n      <td>Male<\\/td>\\n      <td>1<\\/td>\\n      <td>0<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>22<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Fiber optic<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Monthtomonth<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Electronic check<\\/td>\\n      <td>85.10<\\/td>\\n      <td>1873.70<\\/td>\\n      <td>Yes<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>7029<\\/th>\\n      <td>9992UJOEL<\\/td>\\n      <td>Male<\\/td>\\n      <td>1<\\/td>\\n      <td>0<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>2<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>DSL<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>No<\\/td>\\n      <td>Monthtomonth<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Mailed check<\\/td>\\n      <td>50.30<\\/td>\\n      <td>92.75<\\/td>\\n      <td>No<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>7030<\\/th>\\n      <td>9993LHIEB<\\/td>\\n      <td>Male<\\/td>\\n      <td>1<\\/td>\\n      <td>0<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>67<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>DSL<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Two year<\\/td>\\n      <td>No<\\/td>\\n      <td>Mailed check<\\/td>\\n      <td>67.85<\\/td>\\n      <td>4627.65<\\/td>\\n      <td>No<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>7031<\\/th>\\n      <td>9995HOTOH<\\/td>\\n      <td>Male<\\/td>\\n      <td>1<\\/td>\\n      <td>0<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>63<\\/td>\\n      <td>No<\\/td>\\n      <td>No phone service<\\/td>\\n      <td>DSL<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>No<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Yes<\\/td>\\n      <td>Two year<\\/td>\\n      <td>No<\\/td>\\n      <td>Electronic check<\\/td>\\n      <td>59.00<\\/td>\\n      <td>3707.60<\\/td>\\n      <td>No<\\/td>\\n    <\\/tr>\\n  <\\/tbody>\\n<\\/table>\\n<p>7032 rows × 22 columns<\\/p>\\n<\\/div>\"],\"text/plain\":[\"     customerID  gender  gender_label_encoding_1  SeniorCitizen Partner Dependents  tenure PhoneService     MultipleLines InternetService OnlineSecurity OnlineBackup DeviceProtection TechSupport StreamingTV StreamingMovies      Contract PaperlessBilling     PaymentMethod  MonthlyCharges  TotalCharges Churn\\n0     0002ORFBO  Female                        0              0     Yes        Yes       9          Yes                No             DSL             No          Yes               No         Yes         Yes              No      One year              Yes      Mailed check           65.60        593.30    No\\n1     0003MKNFE    Male                        1              0      No         No       9          Yes               Yes             DSL             No           No               No          No          No             Yes  Monthtomonth               No      Mailed check           59.90        542.40    No\\n2     0004TLHLJ    Male                        1              0      No         No       4          Yes                No     Fiber optic             No           No              Yes          No          No              No  Monthtomonth              Yes  Electronic check           73.90        280.85   Yes\\n3     0011IGKFF    Male                        1              1     Yes         No      13          Yes                No     Fiber optic             No          Yes              Yes          No         Yes             Yes  Monthtomonth              Yes  Electronic check           98.00       1237.85   Yes\\n4     0013EXCHZ  Female                        0              1     Yes         No       3          Yes                No     Fiber optic             No           No               No         Yes         Yes              No  Monthtomonth              Yes      Mailed check           83.90        267.40   Yes\\n...         ...     ...                      ...            ...     ...        ...     ...          ...               ...             ...            ...          ...              ...         ...         ...             ...           ...              ...               ...             ...           ...   ...\\n7027  9987LUTYD  Female                        0              0      No         No      13          Yes                No             DSL            Yes           No               No         Yes          No              No      One year               No      Mailed check           55.15        742.90    No\\n7028  9992RRAMN    Male                        1              0     Yes         No      22          Yes               Yes     Fiber optic             No           No               No          No          No             Yes  Monthtomonth              Yes  Electronic check           85.10       1873.70   Yes\\n7029  9992UJOEL    Male                        1              0      No         No       2          Yes                No             DSL             No          Yes               No          No          No              No  Monthtomonth              Yes      Mailed check           50.30         92.75    No\\n7030  9993LHIEB    Male                        1              0     Yes        Yes      67          Yes                No             DSL            Yes           No              Yes         Yes          No             Yes      Two year               No      Mailed check           67.85       4627.65    No\\n7031  9995HOTOH    Male                        1              0     Yes        Yes      63           No  No phone service             DSL            Yes          Yes              Yes          No         Yes             Yes      Two year               No  Electronic check           59.00       3707.60    No\\n\\n[7032 rows x 22 columns]\"]},\"output_type\":\"execute_result\",\"execution_count\":4}],\"metadata\":{\"id\":\"0_0.4786209211731556\"},\"execution_count\":3,\"source\":[\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\nnb = NotebookExecutor()\\ndf_FS_V1 = nb.get_data('11121732427667526', '@SYS.USERID', 'False', {}, [], limit = None, spark = None, version = 4, sheet_name = '')\\n# df_FS_V1 = nb.get_data('11121732427001986', '@SYS.USERID', 'False', {}, [], limit = None, spark = None, version = 3, sheet_name = '')\\n# df_FS_V1 = nb.get_data('11121732426579213', '@SYS.USERID', 'False', {}, [], limit = None, spark = None, version = 2, sheet_name = '')\\n# df_FS_V1 = nb.get_data('11121732426381877', '@SYS.USERID', 'False', {}, [], limit = None, spark = None, version = 1, sheet_name = '')\\ndf_FS_V1\"],\"cell_type\":\"code\"},{\"outputs\":[{\"metadata\":{},\"data\":{\"text/html\":[\"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n<\\/style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th><\\/th>\\n      <th>App<\\/th>\\n      <th>Branch_Id<\\/th>\\n      <th>Commission<\\/th>\\n      <th>Customer_Id<\\/th>\\n      <th>Day_Name<\\/th>\\n      <th>Feedback<\\/th>\\n      <th>Holiday<\\/th>\\n      <th>Order_Date<\\/th>\\n      <th>Order_Id<\\/th>\\n      <th>Order_Item<\\/th>\\n      <th>Order_Type<\\/th>\\n      <th>Payment_Mode<\\/th>\\n      <th>Price<\\/th>\\n      <th>Quantity<\\/th>\\n      <th>Rating<\\/th>\\n      <th>Restaurant_Name<\\/th>\\n      <th>Tax<\\/th>\\n      <th>Total_Amount<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n  <tbody>\\n    <tr>\\n      <th>0<\\/th>\\n      <td>Default<\\/td>\\n      <td>LGMumbai<\\/td>\\n      <td>0<\\/td>\\n      <td>C5<\\/td>\\n      <td>Wednesday<\\/td>\\n      <td>The restaurant had an elegant decor but the wa...<\\/td>\\n      <td>NA<\\/td>\\n      <td>452023 1557<\\/td>\\n      <td>LGMUM98055<\\/td>\\n      <td>Caesar Salad<\\/td>\\n      <td>Dinein<\\/td>\\n      <td>Card<\\/td>\\n      <td>199<\\/td>\\n      <td>3<\\/td>\\n      <td>4<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>597<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>1<\\/th>\\n      <td>Default<\\/td>\\n      <td>LGChennai<\\/td>\\n      <td>0<\\/td>\\n      <td>C9<\\/td>\\n      <td>Saturday<\\/td>\\n      <td>Courteous Approach<\\/td>\\n      <td>NA<\\/td>\\n      <td>172023 1943<\\/td>\\n      <td>LGCH30883<\\/td>\\n      <td>Spring Rolls<\\/td>\\n      <td>Dinein<\\/td>\\n      <td>Card<\\/td>\\n      <td>149<\\/td>\\n      <td>3<\\/td>\\n      <td>3<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>447<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>2<\\/th>\\n      <td>Zomato<\\/td>\\n      <td>LGChennai<\\/td>\\n      <td>20<\\/td>\\n      <td>C8<\\/td>\\n      <td>Wednesday<\\/td>\\n      <td>Flavorful dishes flavor diversity<\\/td>\\n      <td>NA<\\/td>\\n      <td>5172023 2028<\\/td>\\n      <td>LGCH62184<\\/td>\\n      <td>Margherita Pizza<\\/td>\\n      <td>Online<\\/td>\\n      <td>UPI<\\/td>\\n      <td>299<\\/td>\\n      <td>3<\\/td>\\n      <td>4<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>897<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>3<\\/th>\\n      <td>Swiggy<\\/td>\\n      <td>LGWhitefield<\\/td>\\n      <td>21<\\/td>\\n      <td>C4<\\/td>\\n      <td>Tuesday<\\/td>\\n      <td>Prompt service<\\/td>\\n      <td>NA<\\/td>\\n      <td>8292023 813<\\/td>\\n      <td>LGWTF10032<\\/td>\\n      <td>Spring Rolls<\\/td>\\n      <td>Online<\\/td>\\n      <td>Card<\\/td>\\n      <td>149<\\/td>\\n      <td>3<\\/td>\\n      <td>3<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>447<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>4<\\/th>\\n      <td>Uber Eats<\\/td>\\n      <td>LGMumbai<\\/td>\\n      <td>23<\\/td>\\n      <td>C9<\\/td>\\n      <td>Sunday<\\/td>\\n      <td>Courteous staff<\\/td>\\n      <td>NA<\\/td>\\n      <td>4302023 1329<\\/td>\\n      <td>LGMUM48641<\\/td>\\n      <td>Margherita Pizza<\\/td>\\n      <td>Online<\\/td>\\n      <td>Card<\\/td>\\n      <td>299<\\/td>\\n      <td>2<\\/td>\\n      <td>2<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>598<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>...<\\/th>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10095<\\/th>\\n      <td>Zomato<\\/td>\\n      <td>LGHSR Layout<\\/td>\\n      <td>20<\\/td>\\n      <td>C9<\\/td>\\n      <td>Friday<\\/td>\\n      <td>Flavor adventure<\\/td>\\n      <td>NA<\\/td>\\n      <td>692023 1551<\\/td>\\n      <td>LGHSR52539<\\/td>\\n      <td>Spring Rolls<\\/td>\\n      <td>Online<\\/td>\\n      <td>Card<\\/td>\\n      <td>149<\\/td>\\n      <td>2<\\/td>\\n      <td>2<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>298<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10096<\\/th>\\n      <td>Default<\\/td>\\n      <td>LGNew Delhi<\\/td>\\n      <td>0<\\/td>\\n      <td>C8<\\/td>\\n      <td>Thursday<\\/td>\\n      <td>Unique offerings service inconsistency<\\/td>\\n      <td>NA<\\/td>\\n      <td>8172023 2228<\\/td>\\n      <td>LGND15521<\\/td>\\n      <td>Margherita Pizza<\\/td>\\n      <td>Dinein<\\/td>\\n      <td>Card<\\/td>\\n      <td>299<\\/td>\\n      <td>1<\\/td>\\n      <td>4<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>299<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10097<\\/th>\\n      <td>Zomato<\\/td>\\n      <td>LGAhmedabad<\\/td>\\n      <td>20<\\/td>\\n      <td>C7<\\/td>\\n      <td>Monday<\\/td>\\n      <td>Memorable desserts service delay<\\/td>\\n      <td>NA<\\/td>\\n      <td>1302023 305<\\/td>\\n      <td>LGAHD52328<\\/td>\\n      <td>Peri Peri Wings<\\/td>\\n      <td>Online<\\/td>\\n      <td>UPI<\\/td>\\n      <td>199<\\/td>\\n      <td>3<\\/td>\\n      <td>3<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>597<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10098<\\/th>\\n      <td>Default<\\/td>\\n      <td>LGChandigarh<\\/td>\\n      <td>0<\\/td>\\n      <td>C5<\\/td>\\n      <td>Wednesday<\\/td>\\n      <td>Exciting menu portion concerns<\\/td>\\n      <td>NA<\\/td>\\n      <td>2152023 056<\\/td>\\n      <td>LGCHD20057<\\/td>\\n      <td>Chicken Shawarma Wrap<\\/td>\\n      <td>Take Away<\\/td>\\n      <td>UPI<\\/td>\\n      <td>225<\\/td>\\n      <td>1<\\/td>\\n      <td>3<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>225<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10099<\\/th>\\n      <td>Default<\\/td>\\n      <td>LGChennai<\\/td>\\n      <td>0<\\/td>\\n      <td>C9<\\/td>\\n      <td>Sunday<\\/td>\\n      <td>Flavorful dishes small portions<\\/td>\\n      <td>Vijayadashami<\\/td>\\n      <td>9102023 2004<\\/td>\\n      <td>LGCH47585<\\/td>\\n      <td>Salad<\\/td>\\n      <td>Take Away<\\/td>\\n      <td>Card<\\/td>\\n      <td>175<\\/td>\\n      <td>2<\\/td>\\n      <td>4<\\/td>\\n      <td>Leons Grill<\\/td>\\n      <td>18<\\/td>\\n      <td>350<\\/td>\\n    <\\/tr>\\n  <\\/tbody>\\n<\\/table>\\n<p>10100 rows × 18 columns<\\/p>\\n<\\/div>\"],\"text/plain\":[\"             App     Branch_Id  Commission Customer_Id   Day_Name                                           Feedback        Holiday    Order_Date    Order_Id             Order_Item Order_Type Payment_Mode  Price  Quantity  Rating Restaurant_Name  Tax  Total_Amount\\n0        Default      LGMumbai           0          C5  Wednesday  The restaurant had an elegant decor but the wa...             NA   452023 1557  LGMUM98055           Caesar Salad     Dinein         Card    199         3       4     Leons Grill   18           597\\n1        Default     LGChennai           0          C9   Saturday                                 Courteous Approach             NA   172023 1943   LGCH30883           Spring Rolls     Dinein         Card    149         3       3     Leons Grill   18           447\\n2         Zomato     LGChennai          20          C8  Wednesday                  Flavorful dishes flavor diversity             NA  5172023 2028   LGCH62184       Margherita Pizza     Online          UPI    299         3       4     Leons Grill   18           897\\n3         Swiggy  LGWhitefield          21          C4    Tuesday                                     Prompt service             NA   8292023 813  LGWTF10032           Spring Rolls     Online         Card    149         3       3     Leons Grill   18           447\\n4      Uber Eats      LGMumbai          23          C9     Sunday                                    Courteous staff             NA  4302023 1329  LGMUM48641       Margherita Pizza     Online         Card    299         2       2     Leons Grill   18           598\\n...          ...           ...         ...         ...        ...                                                ...            ...           ...         ...                    ...        ...          ...    ...       ...     ...             ...  ...           ...\\n10095     Zomato  LGHSR Layout          20          C9     Friday                                   Flavor adventure             NA   692023 1551  LGHSR52539           Spring Rolls     Online         Card    149         2       2     Leons Grill   18           298\\n10096    Default   LGNew Delhi           0          C8   Thursday             Unique offerings service inconsistency             NA  8172023 2228   LGND15521       Margherita Pizza     Dinein         Card    299         1       4     Leons Grill   18           299\\n10097     Zomato   LGAhmedabad          20          C7     Monday                   Memorable desserts service delay             NA   1302023 305  LGAHD52328        Peri Peri Wings     Online          UPI    199         3       3     Leons Grill   18           597\\n10098    Default  LGChandigarh           0          C5  Wednesday                     Exciting menu portion concerns             NA   2152023 056  LGCHD20057  Chicken Shawarma Wrap  Take Away          UPI    225         1       3     Leons Grill   18           225\\n10099    Default     LGChennai           0          C9     Sunday                    Flavorful dishes small portions  Vijayadashami  9102023 2004   LGCH47585                  Salad  Take Away         Card    175         2       4     Leons Grill   18           350\\n\\n[10100 rows x 18 columns]\"]},\"output_type\":\"execute_result\",\"execution_count\":1}],\"metadata\":{\"id\":\"39291273690_0.11500347687422097\"},\"execution_count\":0,\"source\":[\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\nnb = NotebookExecutor()\\ndf_Order_Sales = nb.get_data('11121719551180627', '@SYS.USERID','True', {},['11121719553735717'], sheet_name = '')\\ndf_Order_Sales\"],\"cell_type\":\"code\"},{\"outputs\":[],\"metadata\":{\"id\":\"39291273690_0.13738428891990417\"},\"execution_count\":3,\"source\":[\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\nnb = NotebookExecutor()\\n#File extension should be with .csv/.json/.txt\\nnb.save_artifact(dataframe = df_Order_Sales, name = 'df_Order_Sales.txt')\"],\"cell_type\":\"code\"},{\"outputs\":[{\"output_type\":\"stream\",\"name\":\"stdout\",\"text\":[\"Dataframe has been written to database.\\n\"]}],\"metadata\":{\"id\":\"39291273690_0.21092486923669873\"},\"execution_count\":4,\"source\":[\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\nnb = NotebookExecutor()\\nnb.mysql_writer('dmwriter', 'Ri@us98r9d', 'mysql.mysql', '3306', 'BDB_Hiring_Data', 'Data_Dump_950', df_Order_Sales)\\n# table=\\\"Data_Dump\\\", user=\\\"dmwriter\\\", password=\\\"Ri@us98r9d\\\", host=\\\"mysql.mysql\\\", port=\\\"3306\\\", database=\\\"BDB_Hiring_Data\\\")\"],\"cell_type\":\"code\"},{\"outputs\":[{\"metadata\":{},\"data\":{\"text/html\":[\"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n<\\/style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th><\\/th>\\n      <th>App<\\/th>\\n      <th>Branch_Id<\\/th>\\n      <th>Commission<\\/th>\\n      <th>Customer_Id<\\/th>\\n      <th>Day_Name<\\/th>\\n      <th>Feedback<\\/th>\\n      <th>Holiday<\\/th>\\n      <th>Order_Date<\\/th>\\n      <th>Order_Id<\\/th>\\n      <th>Order_Item<\\/th>\\n      <th>Order_Type<\\/th>\\n      <th>Payment_Mode<\\/th>\\n      <th>Price<\\/th>\\n      <th>Quantity<\\/th>\\n      <th>Rating<\\/th>\\n      <th>Restaurant_Name<\\/th>\\n      <th>Tax<\\/th>\\n      <th>Total_Amount<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n  <tbody>\\n    <tr>\\n      <th>0<\\/th>\\n      <td>0<\\/td>\\n      <td>7<\\/td>\\n      <td>0<\\/td>\\n      <td>5<\\/td>\\n      <td>6<\\/td>\\n      <td>284<\\/td>\\n      <td>11<\\/td>\\n      <td>4547<\\/td>\\n      <td>8015<\\/td>\\n      <td>2<\\/td>\\n      <td>0<\\/td>\\n      <td>0<\\/td>\\n      <td>199<\\/td>\\n      <td>3<\\/td>\\n      <td>4<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>597<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>1<\\/th>\\n      <td>0<\\/td>\\n      <td>3<\\/td>\\n      <td>0<\\/td>\\n      <td>9<\\/td>\\n      <td>2<\\/td>\\n      <td>26<\\/td>\\n      <td>11<\\/td>\\n      <td>1087<\\/td>\\n      <td>2263<\\/td>\\n      <td>28<\\/td>\\n      <td>0<\\/td>\\n      <td>0<\\/td>\\n      <td>149<\\/td>\\n      <td>3<\\/td>\\n      <td>3<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>447<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>2<\\/th>\\n      <td>3<\\/td>\\n      <td>3<\\/td>\\n      <td>20<\\/td>\\n      <td>8<\\/td>\\n      <td>6<\\/td>\\n      <td>95<\\/td>\\n      <td>11<\\/td>\\n      <td>5079<\\/td>\\n      <td>2602<\\/td>\\n      <td>17<\\/td>\\n      <td>1<\\/td>\\n      <td>2<\\/td>\\n      <td>299<\\/td>\\n      <td>3<\\/td>\\n      <td>4<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>897<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>3<\\/th>\\n      <td>1<\\/td>\\n      <td>9<\\/td>\\n      <td>21<\\/td>\\n      <td>4<\\/td>\\n      <td>5<\\/td>\\n      <td>213<\\/td>\\n      <td>11<\\/td>\\n      <td>9202<\\/td>\\n      <td>9165<\\/td>\\n      <td>28<\\/td>\\n      <td>1<\\/td>\\n      <td>0<\\/td>\\n      <td>149<\\/td>\\n      <td>3<\\/td>\\n      <td>3<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>447<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>4<\\/th>\\n      <td>2<\\/td>\\n      <td>7<\\/td>\\n      <td>23<\\/td>\\n      <td>9<\\/td>\\n      <td>3<\\/td>\\n      <td>27<\\/td>\\n      <td>11<\\/td>\\n      <td>4442<\\/td>\\n      <td>7517<\\/td>\\n      <td>17<\\/td>\\n      <td>1<\\/td>\\n      <td>0<\\/td>\\n      <td>299<\\/td>\\n      <td>2<\\/td>\\n      <td>2<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>598<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>...<\\/th>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n      <td>...<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10095<\\/th>\\n      <td>3<\\/td>\\n      <td>5<\\/td>\\n      <td>20<\\/td>\\n      <td>9<\\/td>\\n      <td>0<\\/td>\\n      <td>83<\\/td>\\n      <td>11<\\/td>\\n      <td>7170<\\/td>\\n      <td>5478<\\/td>\\n      <td>28<\\/td>\\n      <td>1<\\/td>\\n      <td>0<\\/td>\\n      <td>149<\\/td>\\n      <td>2<\\/td>\\n      <td>2<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>298<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10096<\\/th>\\n      <td>0<\\/td>\\n      <td>8<\\/td>\\n      <td>0<\\/td>\\n      <td>8<\\/td>\\n      <td>4<\\/td>\\n      <td>314<\\/td>\\n      <td>11<\\/td>\\n      <td>8704<\\/td>\\n      <td>8212<\\/td>\\n      <td>17<\\/td>\\n      <td>0<\\/td>\\n      <td>0<\\/td>\\n      <td>299<\\/td>\\n      <td>1<\\/td>\\n      <td>4<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>299<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10097<\\/th>\\n      <td>3<\\/td>\\n      <td>0<\\/td>\\n      <td>20<\\/td>\\n      <td>7<\\/td>\\n      <td>1<\\/td>\\n      <td>180<\\/td>\\n      <td>11<\\/td>\\n      <td>883<\\/td>\\n      <td>506<\\/td>\\n      <td>23<\\/td>\\n      <td>1<\\/td>\\n      <td>2<\\/td>\\n      <td>199<\\/td>\\n      <td>3<\\/td>\\n      <td>3<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>597<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10098<\\/th>\\n      <td>0<\\/td>\\n      <td>2<\\/td>\\n      <td>0<\\/td>\\n      <td>5<\\/td>\\n      <td>6<\\/td>\\n      <td>80<\\/td>\\n      <td>11<\\/td>\\n      <td>1402<\\/td>\\n      <td>3210<\\/td>\\n      <td>7<\\/td>\\n      <td>2<\\/td>\\n      <td>2<\\/td>\\n      <td>225<\\/td>\\n      <td>1<\\/td>\\n      <td>3<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>225<\\/td>\\n    <\\/tr>\\n    <tr>\\n      <th>10099<\\/th>\\n      <td>0<\\/td>\\n      <td>3<\\/td>\\n      <td>0<\\/td>\\n      <td>9<\\/td>\\n      <td>3<\\/td>\\n      <td>102<\\/td>\\n      <td>16<\\/td>\\n      <td>9584<\\/td>\\n      <td>2447<\\/td>\\n      <td>26<\\/td>\\n      <td>2<\\/td>\\n      <td>0<\\/td>\\n      <td>175<\\/td>\\n      <td>2<\\/td>\\n      <td>4<\\/td>\\n      <td>0<\\/td>\\n      <td>18<\\/td>\\n      <td>350<\\/td>\\n    <\\/tr>\\n  <\\/tbody>\\n<\\/table>\\n<p>10100 rows × 18 columns<\\/p>\\n<\\/div>\"],\"text/plain\":[\"       App  Branch_Id  Commission  Customer_Id  Day_Name  Feedback  Holiday  Order_Date  Order_Id  Order_Item  Order_Type  Payment_Mode  Price  Quantity  Rating  Restaurant_Name  Tax  Total_Amount\\n0        0          7           0            5         6       284       11        4547      8015           2           0             0    199         3       4                0   18           597\\n1        0          3           0            9         2        26       11        1087      2263          28           0             0    149         3       3                0   18           447\\n2        3          3          20            8         6        95       11        5079      2602          17           1             2    299         3       4                0   18           897\\n3        1          9          21            4         5       213       11        9202      9165          28           1             0    149         3       3                0   18           447\\n4        2          7          23            9         3        27       11        4442      7517          17           1             0    299         2       2                0   18           598\\n...    ...        ...         ...          ...       ...       ...      ...         ...       ...         ...         ...           ...    ...       ...     ...              ...  ...           ...\\n10095    3          5          20            9         0        83       11        7170      5478          28           1             0    149         2       2                0   18           298\\n10096    0          8           0            8         4       314       11        8704      8212          17           0             0    299         1       4                0   18           299\\n10097    3          0          20            7         1       180       11         883       506          23           1             2    199         3       3                0   18           597\\n10098    0          2           0            5         6        80       11        1402      3210           7           2             2    225         1       3                0   18           225\\n10099    0          3           0            9         3       102       16        9584      2447          26           2             0    175         2       4                0   18           350\\n\\n[10100 rows x 18 columns]\"]},\"output_type\":\"execute_result\",\"execution_count\":7}],\"metadata\":{\"id\":\"39291273690_0.9808942502304732\"},\"execution_count\":6,\"source\":[\"import pandas as pd\\nfrom sklearn.preprocessing import LabelEncoder\\nle = LabelEncoder()\\nfor col in df_Order_Sales.select_dtypes(include=['object']).columns:\\n    df_Order_Sales[col] = le.fit_transform(df_Order_Sales[col]);\\ndf_Order_Sales\"],\"cell_type\":\"code\"},{\"outputs\":[{\"output_type\":\"stream\",\"name\":\"stdout\",\"text\":[\"<class 'pandas.core.frame.DataFrame'>\\nRangeIndex: 10100 entries, 0 to 10099\\nData columns (total 18 columns):\\n #   Column           Non-Null Count  Dtype\\n---  ------           --------------  -----\\n 0   App              10100 non-null  int64\\n 1   Branch_Id        10100 non-null  int64\\n 2   Commission       10100 non-null  int64\\n 3   Customer_Id      10100 non-null  int64\\n 4   Day_Name         10100 non-null  int64\\n 5   Feedback         10100 non-null  int64\\n 6   Holiday          10100 non-null  int64\\n 7   Order_Date       10100 non-null  int64\\n 8   Order_Id         10100 non-null  int64\\n 9   Order_Item       10100 non-null  int64\\n 10  Order_Type       10100 non-null  int64\\n 11  Payment_Mode     10100 non-null  int64\\n 12  Price            10100 non-null  int64\\n 13  Quantity         10100 non-null  int64\\n 14  Rating           10100 non-null  int64\\n 15  Restaurant_Name  10100 non-null  int64\\n 16  Tax              10100 non-null  int64\\n 17  Total_Amount     10100 non-null  int64\\ndtypes: int64(18)\\nmemory usage: 1.4 MB\\n\"]}],\"metadata\":{\"id\":\"39291273690_0.19137427261995787\"},\"execution_count\":7,\"source\":[\"df_Order_Sales.info()\"],\"cell_type\":\"code\"},{\"outputs\":[{\"output_type\":\"stream\",\"name\":\"stdout\",\"text\":\"Shape of complete data: (10100, 18)\\nShape of training data: (7070, 17)\\nShape of testing data : (3030, 17)\\nModel RandomForestClassifier() trained\\nSeconds elapsed: 0.744\\nPredictions on training data made\\nAccuracy score of training predictions: 1.0\\nClassification report of training predictions:\\n              precision    recall  f1-score   support\\n\\n           1      1.000     1.000     1.000      2412\\n           2      1.000     1.000     1.000      2361\\n           3      1.000     1.000     1.000      2297\\n\\n    accuracy                          1.000      7070\\n   macro avg      1.000     1.000     1.000      7070\\nweighted avg      1.000     1.000     1.000      7070\\n\\nPredictions on testing data made\\nAccuracy score of testing predictions: 0.996\\nClassification report of testing predictions:\\n              precision    recall  f1-score   support\\n\\n           1      0.993     0.998     0.996      1034\\n           2      0.996     0.993     0.994      1001\\n           3      1.000     0.998     0.999       995\\n\\n    accuracy                          0.996      3030\\n   macro avg      0.996     0.996     0.996      3030\\nweighted avg      0.996     0.996     0.996      3030\\n\\n\"}],\"metadata\":{\"id\":\"39291273690_0.5788133754279525\"},\"execution_count\":8,\"source\":[\"import pandas as pd\\nfrom time import perf_counter as get_time\\nfrom sklearn.model_selection import train_test_split\\nfrom sklearn.ensemble import RandomForestClassifier\\nfrom sklearn.metrics import accuracy_score, classification_report\\n\\n# Define the necessary variables here\\n_data   = df_Order_Sales    # pd.DataFrame: Full data to process\\n_target = 'Quantity'    # string: Column name of the target variable\\n\\nif _data is None or _target is None:\\n    raise Exception(f'Both _data and _target must be specified')\\nelif not (isinstance(_data, pd.DataFrame) and isinstance(_target, str)):\\n    raise Exception(f'Datatype of _data must be pd.DataFrame; that of _target must be str')\\n\\n# Separating the independent and dependent variables into X and y respectively\\ny = _data[_target]\\nX = _data.drop(columns=_target)\\nprint(f'Shape of complete data: {_data.shape}')\\n\\n# Splitting the dataset into training and testing datasets\\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\\nprint(f'Shape of training data: {X_train.shape}')\\nprint(f'Shape of testing data : {X_test.shape}')\\n\\n# Creating the classifier and fitting it to the training data\\nran_for_clf = RandomForestClassifier()\\ntime_now = get_time()\\nran_for_clf.fit(X_train, y_train);\\nprint(f'Model {ran_for_clf} trained')\\nprint(f'Seconds elapsed: {round(get_time() - time_now, 3)}')\\n\\n# Making predictions on the training data\\npredict_train = ran_for_clf.predict(X_train)\\nprint(f'Predictions on training data made')\\n\\n# Finding the accuracy score of the training predictions\\naccuracy_train = accuracy_score(y_train, predict_train)\\nprint(f'Accuracy score of training predictions: {round(accuracy_train, 3)}')\\n\\n# Printing the classification report of the training predictions\\nreport_train = classification_report(y_train, predict_train, digits=3)\\nprint(f'Classification report of training predictions:')\\nprint(report_train)\\n\\n# Making predictions on the testing data\\npredict_test = ran_for_clf.predict(X_test)\\nprint(f'Predictions on testing data made')\\n\\n# Finding the accuracy score of the testing predictions\\naccuracy_test = accuracy_score(y_test, predict_test)\\nprint(f'Accuracy score of testing predictions: {round(accuracy_test, 3)}')\\n\\n# Printing the classification report of the testing predictions\\nreport_test = classification_report(y_test, predict_test, digits=3)\\nprint(f'Classification report of testing predictions:')\\nprint(report_test)\"],\"cell_type\":\"code\"}],\"nbformat\":4}","secrets":"{\"reserv1\":\"\",\"reserv2\":\"\",\"reserv3\":\"\",\"reserv4\":\"\",\"reserv5\":\"\",\"createdDate\":null,\"isActive\":null,\"lastUpdatedDate\":null,\"active\":1,\"migrationId\":null,\"loggedUserId\":null,\"mongoQL\":null,\"id\":40206347,\"type\":\"210\",\"status\":1,\"spaceKey\":\"1112\",\"settings\":\"[]\"}","dataSource":[],"notebook":"{\"mongoQL\":null,\"migrationId\":null,\"loggedUserId\":null,\"id\":39291273690,\"projectId\":20282525387,\"spaceKey\":\"1112\",\"notebookName\":\"DataPrep\",\"data\":\"{\\\"datasets\\\":[],\\\"uncheckeddatasets\\\":[],\\\"code\\\":[{\\\"id\\\":\\\"0_0.4786209211731556\\\",\\\"conflict\\\":\\\"false\\\",\\\"code\\\":\\\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\\\nnb = NotebookExecutor()\\\\ndf_FS_V1 = nb.get_data('11121732427667526', '@SYS.USERID', 'False', {}, [], limit = None, spark = None, version = 4, sheet_name = '')\\\\n# df_FS_V1 = nb.get_data('11121732427001986', '@SYS.USERID', 'False', {}, [], limit = None, spark = None, version = 3, sheet_name = '')\\\\n# df_FS_V1 = nb.get_data('11121732426579213', '@SYS.USERID', 'False', {}, [], limit = None, spark = None, version = 2, sheet_name = '')\\\\n# df_FS_V1 = nb.get_data('11121732426381877', '@SYS.USERID', 'False', {}, [], limit = None, spark = None, version = 1, sheet_name = '')\\\\ndf_FS_V1\\\",\\\"count\\\":1,\\\"mode\\\":\\\"preview\\\",\\\"type\\\":\\\"code\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"outputArray\\\":[],\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"pre_cell_id\\\":0,\\\"is_pre_cell\\\":false,\\\"succORerr\\\":true,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"markDowns\\\":false,\\\"loader\\\":false,\\\"image\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"result\\\":\\\"\\\",\\\"algorithms\\\":\\\"\\\",\\\"semicolon\\\":\\\"\\\",\\\"cputimes\\\":\\\"\\\",\\\"showcputime\\\":false,\\\"secret\\\":[]},{\\\"id\\\":\\\"39291273690_0.11500347687422097\\\",\\\"pre_cell_id\\\":\\\"0_0.4786209211731556\\\",\\\"is_pre_cell\\\":true,\\\"succORerr\\\":true,\\\"type\\\":\\\"code\\\",\\\"code\\\":\\\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\\\nnb = NotebookExecutor()\\\\ndf_Order_Sales = nb.get_data('11121719551180627', '@SYS.USERID','True', {},['11121719553735717'], sheet_name = '')\\\\ndf_Order_Sales\\\",\\\"count\\\":2,\\\"mode\\\":\\\"editor\\\",\\\"result\\\":\\\"\\\",\\\"outputArray\\\":\\\"\\\",\\\"image\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"loader\\\":false,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"secret\\\":[],\\\"markDowns\\\":false,\\\"widget\\\":false,\\\"showcputime\\\":true},{\\\"id\\\":\\\"39291273690_0.13738428891990417\\\",\\\"pre_cell_id\\\":0,\\\"is_pre_cell\\\":false,\\\"succORerr\\\":true,\\\"type\\\":\\\"code\\\",\\\"code\\\":\\\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\\\nnb = NotebookExecutor()\\\\n#File extension should be with .csv/.json/.txt\\\\nnb.save_artifact(dataframe = df_Order_Sales, name = 'df_Order_Sales.txt')\\\",\\\"count\\\":5,\\\"mode\\\":\\\"preview\\\",\\\"result\\\":\\\"\\\",\\\"outputArray\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"image\\\":\\\"\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"loader\\\":false,\\\"markDowns\\\":false,\\\"algorithms\\\":\\\"\\\",\\\"semicolon\\\":\\\"\\\",\\\"cputimes\\\":\\\"\\\",\\\"showcputime\\\":true,\\\"secret\\\":[],\\\"widget\\\":false},{\\\"id\\\":\\\"39291273690_0.21092486923669873\\\",\\\"pre_cell_id\\\":0,\\\"is_pre_cell\\\":false,\\\"succORerr\\\":true,\\\"type\\\":\\\"code\\\",\\\"code\\\":\\\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\\\nnb = NotebookExecutor()\\\\nnb.mysql_writer('dmwriter', 'Ri@us98r9d', 'mysql.mysql', '3306', 'BDB_Hiring_Data', 'Data_Dump_950', df_Order_Sales)\\\\n# table=\\\\\\\"Data_Dump\\\\\\\", user=\\\\\\\"dmwriter\\\\\\\", password=\\\\\\\"Ri@us98r9d\\\\\\\", host=\\\\\\\"mysql.mysql\\\\\\\", port=\\\\\\\"3306\\\\\\\", database=\\\\\\\"BDB_Hiring_Data\\\\\\\")\\\",\\\"count\\\":6,\\\"mode\\\":\\\"preview\\\",\\\"result\\\":\\\"\\\",\\\"outputArray\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"image\\\":\\\"\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"loader\\\":false,\\\"markDowns\\\":false,\\\"algorithms\\\":\\\"\\\",\\\"semicolon\\\":\\\"\\\",\\\"cputimes\\\":\\\"\\\",\\\"showcputime\\\":true,\\\"secret\\\":[],\\\"writers\\\":\\\"MySQL\\\",\\\"widget\\\":false},{\\\"id\\\":\\\"39291273690_0.9808942502304732\\\",\\\"pre_cell_id\\\":\\\"39291273690_0.21092486923669873\\\",\\\"is_pre_cell\\\":true,\\\"succORerr\\\":true,\\\"type\\\":\\\"code\\\",\\\"code\\\":\\\"import pandas as pd\\\\nfrom sklearn.preprocessing import LabelEncoder\\\\nle = LabelEncoder()\\\\nfor col in df_Order_Sales.select_dtypes(include=['object']).columns:\\\\n    df_Order_Sales[col] = le.fit_transform(df_Order_Sales[col]);\\\\ndf_Order_Sales\\\",\\\"count\\\":8,\\\"mode\\\":\\\"editor\\\",\\\"result\\\":\\\"\\\",\\\"outputArray\\\":\\\"\\\",\\\"image\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"loader\\\":false,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"secret\\\":[],\\\"markDowns\\\":false,\\\"widget\\\":false,\\\"showcputime\\\":true,\\\"semicolon\\\":\\\"\\\"},{\\\"id\\\":\\\"39291273690_0.19137427261995787\\\",\\\"pre_cell_id\\\":\\\"39291273690_0.9808942502304732\\\",\\\"is_pre_cell\\\":true,\\\"succORerr\\\":true,\\\"type\\\":\\\"code\\\",\\\"code\\\":\\\"df_Order_Sales.info()\\\",\\\"count\\\":9,\\\"mode\\\":\\\"editor\\\",\\\"result\\\":\\\"\\\",\\\"outputArray\\\":\\\"\\\",\\\"image\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"loader\\\":false,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"secret\\\":[],\\\"markDowns\\\":false,\\\"widget\\\":false,\\\"showcputime\\\":true},{\\\"id\\\":\\\"39291273690_0.5788133754279525\\\",\\\"pre_cell_id\\\":0,\\\"is_pre_cell\\\":false,\\\"succORerr\\\":true,\\\"type\\\":\\\"code\\\",\\\"code\\\":\\\"import pandas as pd\\\\nfrom time import perf_counter as get_time\\\\nfrom sklearn.model_selection import train_test_split\\\\nfrom sklearn.ensemble import RandomForestClassifier\\\\nfrom sklearn.metrics import accuracy_score, classification_report\\\\n\\\\n# Define the necessary variables here\\\\n_data   = df_Order_Sales    # pd.DataFrame: Full data to process\\\\n_target = 'Quantity'    # string: Column name of the target variable\\\\n\\\\nif _data is None or _target is None:\\\\n    raise Exception(f'Both _data and _target must be specified')\\\\nelif not (isinstance(_data, pd.DataFrame) and isinstance(_target, str)):\\\\n    raise Exception(f'Datatype of _data must be pd.DataFrame; that of _target must be str')\\\\n\\\\n# Separating the independent and dependent variables into X and y respectively\\\\ny = _data[_target]\\\\nX = _data.drop(columns=_target)\\\\nprint(f'Shape of complete data: {_data.shape}')\\\\n\\\\n# Splitting the dataset into training and testing datasets\\\\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\\\\nprint(f'Shape of training data: {X_train.shape}')\\\\nprint(f'Shape of testing data : {X_test.shape}')\\\\n\\\\n# Creating the classifier and fitting it to the training data\\\\nran_for_clf = RandomForestClassifier()\\\\ntime_now = get_time()\\\\nran_for_clf.fit(X_train, y_train);\\\\nprint(f'Model {ran_for_clf} trained')\\\\nprint(f'Seconds elapsed: {round(get_time() - time_now, 3)}')\\\\n\\\\n# Making predictions on the training data\\\\npredict_train = ran_for_clf.predict(X_train)\\\\nprint(f'Predictions on training data made')\\\\n\\\\n# Finding the accuracy score of the training predictions\\\\naccuracy_train = accuracy_score(y_train, predict_train)\\\\nprint(f'Accuracy score of training predictions: {round(accuracy_train, 3)}')\\\\n\\\\n# Printing the classification report of the training predictions\\\\nreport_train = classification_report(y_train, predict_train, digits=3)\\\\nprint(f'Classification report of training predictions:')\\\\nprint(report_train)\\\\n\\\\n# Making predictions on the testing data\\\\npredict_test = ran_for_clf.predict(X_test)\\\\nprint(f'Predictions on testing data made')\\\\n\\\\n# Finding the accuracy score of the testing predictions\\\\naccuracy_test = accuracy_score(y_test, predict_test)\\\\nprint(f'Accuracy score of testing predictions: {round(accuracy_test, 3)}')\\\\n\\\\n# Printing the classification report of the testing predictions\\\\nreport_test = classification_report(y_test, predict_test, digits=3)\\\\nprint(f'Classification report of testing predictions:')\\\\nprint(report_test)\\\",\\\"count\\\":10,\\\"mode\\\":\\\"preview\\\",\\\"result\\\":\\\"\\\",\\\"outputArray\\\":\\\"\\\",\\\"error\\\":\\\"\\\",\\\"image\\\":\\\"\\\",\\\"hover\\\":true,\\\"interrupt\\\":false,\\\"warning\\\":false,\\\"lineNumber\\\":false,\\\"laodmodel\\\":false,\\\"expand\\\":false,\\\"outputexpand\\\":false,\\\"readonly\\\":false,\\\"loader\\\":false,\\\"markDowns\\\":false,\\\"algorithms\\\":\\\"Random Forest Classifier\\\",\\\"semicolon\\\":\\\"\\\",\\\"cputimes\\\":\\\"\\\",\\\"showcputime\\\":true,\\\"secret\\\":[],\\\"widget\\\":false}],\\\"kernalID\\\":\\\"d23ef7c9-c057-4885-8c80-50b3605f890e\\\",\\\"Algorithms\\\":[\\\"Random Forest Classifier\\\"],\\\"isScheduled\\\":0,\\\"last_modified_date\\\":\\\"\\\"}\",\"description\":\"\",\"createdDate\":1732442976638,\"lastUpdatedDate\":1732516483089,\"createdBy\":48201728,\"updatedBy\":48201728,\"status\":1,\"committedBy\":48201728,\"lastcommittedDate\":1732442976638,\"isShared\":null,\"customComponentscript\":\"\",\"type\":1,\"isScheduled\":null,\"isImported\":0,\"path\":\"\",\"uuid\":\"11121732442976644\"}","preparation":[]}}
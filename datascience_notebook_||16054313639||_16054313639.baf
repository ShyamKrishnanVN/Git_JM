{"featureSets":null,"autoML":null,"superFeatureSet":null,"errorMessage":null,"featureSet":null,"errorCode":null,"notebookModels":null,"message":"Successfully retrived!","notebookModelAsApi":null,"notebookScriptAsApi":null,"notebookModel":null,"notebookModelAsApis":null,"success":true,"notebooks":null,"customNotebookScript":null,"superFeatureSets":null,"messageCode":null,"stackTrace":null,"notebookContent":"{\"sucess\":true,\"content\":{\"cells\":[{\"cell_type\":\"code\",\"metadata\":{\"id\":\"0_0.08453790949281514\"},\"execution_count\":0,\"source\":[\"import pandas as pd \\nfrom sklearn.model_selection import train_test_split\\nfrom sklearn.ensemble import RandomForestClassifier\\nfrom sklearn.preprocessing import LabelEncoder \\nfrom sklearn.metrics import accuracy_score \\nimport joblib ff  \"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.15511686835461602\"},\"execution_count\":null,\"source\":[\"dfdf\"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.7966820442051612\"},\"execution_count\":null,\"source\":[\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\nnb = NotebookExecutor()\\ndf_PA_Data = nb.get_data('11111722937216409', '@SYS.USERID', 'True', {}, [], sheet_name = '')\\n# df_PA_Data.show()\\ndf_PA_Data\"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.7034761324701324\"},\"execution_count\":1,\"source\":[\"# Sample data creation for demonstration purposes\\ndata = {\\n    'feature1': ['A', 'B', 'A', 'C', 'B', 'A', 'C', 'C', 'B', 'A'],\\n    'feature2': ['X', 'Y', 'X', 'Z', 'Y', 'X', 'Z', 'Z', 'Y', 'X'],\\n    'feature3': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\\n    'label': ['yes', 'no', 'yes', 'no', 'yes', 'no', 'yes', 'no', 'yes', 'no']\\n}\\n\\n# Convert to DataFrame\\ndf = pd.DataFrame(data)\\n\\n# Display the first few rows of the DataFrame\\ndf.head()\"],\"outputs\":[{\"data\":{\"text/plain\":[\"  feature1 feature2  feature3 label\\n0        A        X         1   yes\\n1        B        Y         2    no\\n2        A        X         3   yes\\n3        C        Z         4    no\\n4        B        Y         5   yes\"],\"text/html\":[\"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n<\/style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th><\/th>\\n      <th>feature1<\/th>\\n      <th>feature2<\/th>\\n      <th>feature3<\/th>\\n      <th>label<\/th>\\n    <\/tr>\\n  <\/thead>\\n  <tbody>\\n    <tr>\\n      <th>0<\/th>\\n      <td>A<\/td>\\n      <td>X<\/td>\\n      <td>1<\/td>\\n      <td>yes<\/td>\\n    <\/tr>\\n    <tr>\\n      <th>1<\/th>\\n      <td>B<\/td>\\n      <td>Y<\/td>\\n      <td>2<\/td>\\n      <td>no<\/td>\\n    <\/tr>\\n    <tr>\\n      <th>2<\/th>\\n      <td>A<\/td>\\n      <td>X<\/td>\\n      <td>3<\/td>\\n      <td>yes<\/td>\\n    <\/tr>\\n    <tr>\\n      <th>3<\/th>\\n      <td>C<\/td>\\n      <td>Z<\/td>\\n      <td>4<\/td>\\n      <td>no<\/td>\\n    <\/tr>\\n    <tr>\\n      <th>4<\/th>\\n      <td>B<\/td>\\n      <td>Y<\/td>\\n      <td>5<\/td>\\n      <td>yes<\/td>\\n    <\/tr>\\n  <\/tbody>\\n<\/table>\\n<\/div>\"]},\"metadata\":{},\"execution_count\":2,\"output_type\":\"execute_result\"}]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"16054313639_0.5761300561977643\"},\"execution_count\":1,\"source\":[\"# Data Overview\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://pandas.pydata.org/docs/\\\">\\r\\n    <img src=\\\"https://pandas.pydata.org/static/img/pandas_mark.svg\\\" alt=\\\"Pandas Documentation\\\" width=\\\"32\\\" height=\\\"32\\\" />Pandas Documentation\\r\\n  <\/a>\\r\\n<\/div>\"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.6686853823569401\"},\"execution_count\":2,\"source\":[\"# Initialize LabelEncoder\\nle = LabelEncoder()\\n\\n# Encode categorical features\\ndf['feature1'] = le.fit_transform(df['feature1'])\\ndf['feature2'] = le.fit_transform(df['feature2'])\\ndf['label'] = le.fit_transform(df['label'])\\n\\n# Display the encoded DataFrame\\ndf.head()\"],\"outputs\":[{\"data\":{\"text/plain\":[\"   feature1  feature2  feature3  label\\n0         0         0         1      1\\n1         1         1         2      0\\n2         0         0         3      1\\n3         2         2         4      0\\n4         1         1         5      1\"],\"text/html\":[\"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n<\/style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th><\/th>\\n      <th>feature1<\/th>\\n      <th>feature2<\/th>\\n      <th>feature3<\/th>\\n      <th>label<\/th>\\n    <\/tr>\\n  <\/thead>\\n  <tbody>\\n    <tr>\\n      <th>0<\/th>\\n      <td>0<\/td>\\n      <td>0<\/td>\\n      <td>1<\/td>\\n      <td>1<\/td>\\n    <\/tr>\\n    <tr>\\n      <th>1<\/th>\\n      <td>1<\/td>\\n      <td>1<\/td>\\n      <td>2<\/td>\\n      <td>0<\/td>\\n    <\/tr>\\n    <tr>\\n      <th>2<\/th>\\n      <td>0<\/td>\\n      <td>0<\/td>\\n      <td>3<\/td>\\n      <td>1<\/td>\\n    <\/tr>\\n    <tr>\\n      <th>3<\/th>\\n      <td>2<\/td>\\n      <td>2<\/td>\\n      <td>4<\/td>\\n      <td>0<\/td>\\n    <\/tr>\\n    <tr>\\n      <th>4<\/th>\\n      <td>1<\/td>\\n      <td>1<\/td>\\n      <td>5<\/td>\\n      <td>1<\/td>\\n    <\/tr>\\n  <\/tbody>\\n<\/table>\\n<\/div>\"]},\"metadata\":{},\"execution_count\":3,\"output_type\":\"execute_result\"}]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"16054313639_0.41893164227931723\"},\"execution_count\":null,\"source\":[\"# Encoding Categorical Features\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Label Encoding\\\" width=\\\"32\\\" height=\\\"32\\\" />Label Encoding Documentation\\r\\n  <\/a>\\r\\n<\/div>\"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.18096660741570103\"},\"execution_count\":null,\"source\":[\"# Split the data into training and testing sets\\nX = df.drop('label', axis=1)\\ny = df['label']\\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\"],\"outputs\":[]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"16054313639_0.7222336519201222\"},\"execution_count\":null,\"source\":[\"# Splitting Data\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Train-Test Split\\\" width=\\\"32\\\" height=\\\"32\\\" />Train-Test Split Documentation\\r\\n  <\/a>\\r\\n<\/div>\"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.5579328650554016\"},\"execution_count\":null,\"source\":[\"# Initialize the Random Forest Classifier\\nrf = RandomForestClassifier(n_estimators=100, random_state=42)\\n\\n# Train the model\\nrf.fit(X_train, y_train)\"],\"outputs\":[]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"16054313639_0.8753747745220817\"},\"execution_count\":null,\"source\":[\"# Training the Model\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Random Forest Classifier\\\" width=\\\"32\\\" height=\\\"32\\\" />Random Forest Classifier Documentation\\r\\n  <\/a>\\r\\n<\/div>\"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.7213233515588897\"},\"execution_count\":null,\"source\":[\"# Make predictions on the test set\\ny_pred = rf.predict(X_test)\"],\"outputs\":[]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"16054313639_0.96181555769281\"},\"execution_count\":null,\"source\":[\"# Making Predictions\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Random Forest Classifier\\\" width=\\\"32\\\" height=\\\"32\\\" />Random Forest Classifier Documentation\\r\\n  <\/a>\\r\\n<\/div>\\r\\n\"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.5070072185957322\"},\"execution_count\":null,\"source\":[\"# Evaluate the model's performance\\naccuracy = accuracy_score(y_test, y_pred)\\nprint(f'Accuracy: {accuracy * 100:.2f}%')\"],\"outputs\":[]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"16054313639_0.6624425493198247\"},\"execution_count\":null,\"source\":[\"# Evaluating the Model\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.accuracy_score.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Accuracy Score\\\" width=\\\"32\\\" height=\\\"32\\\" />Accuracy Score Documentation\\r\\n  <\/a>\\r\\n<\/div>\"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.8214364024304346\"},\"execution_count\":null,\"source\":[\"# Display feature importance\\nimportances = rf.feature_importances_\\nfeature_names = X.columns\\nfeature_importance_df = pd.DataFrame({'Feature': feature_names, 'Importance': importances})\\nfeature_importance_df.sort_values(by='Importance', ascending=False, inplace=True)\\nfeature_importance_df\"],\"outputs\":[]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"16054313639_0.24038484987536246\"},\"execution_count\":null,\"source\":[\"# Feature Importance\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Random Forest Classifier\\\" width=\\\"32\\\" height=\\\"32\\\" />Random Forest Classifier Documentation\\r\\n  <\/a>\\r\\n<\/div>\"],\"outputs\":[]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"16054313639_0.9120038910326758\"},\"execution_count\":null,\"source\":[\"# Hyperparameter Tuning\\r\\n\\r\\n(Optional) We can tune the hyperparameters of the Random Forest model to improve performance.\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"GridSearchCV\\\" width=\\\"32\\\" height=\\\"32\\\" />GridSearchCV Documentation\\r\\n  <\/a>\\r\\n<\/div>\"],\"outputs\":[]},{\"cell_type\":\"code\",\"metadata\":{\"id\":\"16054313639_0.2631846964101918\"},\"execution_count\":null,\"source\":[\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\nnb = NotebookExecutor()\\ndf_PA_Data = nb.get_data('11111722937216409', '@SYS.USERID', 'True', {}, [], sheet_name = '')\\ndf_PA_Data\"],\"outputs\":[]}],\"metadata\":{},\"nbformat\":4,\"nbformat_minor\":2}}","bizvizNotebook":null,"autoMLs":null,"scripts":null,"bizvizNotebooks":null,"notebook":{"mongoQL":null,"updatedBy":524290,"data":"{\"datasets\":[],\"uncheckeddatasets\":[],\"code\":[{\"id\":\"0_0.08453790949281514\",\"conflict\":\"false\",\"code\":\"import pandas as pd \\nfrom sklearn.model_selection import train_test_split\\nfrom sklearn.ensemble import RandomForestClassifier\\nfrom sklearn.preprocessing import LabelEncoder \\nfrom sklearn.metrics import accuracy_score \\nimport joblib ff  \",\"count\":1,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.15511686835461602\",\"conflict\":\"false\",\"code\":\"dfdf\",\"count\":2,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.7966820442051612\",\"conflict\":\"false\",\"code\":\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\nnb = NotebookExecutor()\\ndf_PA_Data = nb.get_data('11111722937216409', '@SYS.USERID', 'True', {}, [], sheet_name = '')\\n# df_PA_Data.show()\\ndf_PA_Data\",\"count\":3,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.7034761324701324\",\"conflict\":\"false\",\"code\":\"# Sample data creation for demonstration purposes\\ndata = {\\n    'feature1': ['A', 'B', 'A', 'C', 'B', 'A', 'C', 'C', 'B', 'A'],\\n    'feature2': ['X', 'Y', 'X', 'Z', 'Y', 'X', 'Z', 'Z', 'Y', 'X'],\\n    'feature3': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\\n    'label': ['yes', 'no', 'yes', 'no', 'yes', 'no', 'yes', 'no', 'yes', 'no']\\n}\\n\\n# Convert to DataFrame\\ndf = pd.DataFrame(data)\\n\\n# Display the first few rows of the DataFrame\\ndf.head()\",\"count\":4,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.5761300561977643\",\"conflict\":\"false\",\"code\":\"# Data Overview\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://pandas.pydata.org/docs/\\\">\\r\\n    <img src=\\\"https://pandas.pydata.org/static/img/pandas_mark.svg\\\" alt=\\\"Pandas Documentation\\\" width=\\\"32\\\" height=\\\"32\\\" />Pandas Documentation\\r\\n  <\/a>\\r\\n<\/div>\",\"count\":5,\"mode\":\"preview\",\"type\":\"markdown\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[],\"markdownCollapse\":{\"index\":0,\"isExpand\":false,\"hiddenCell\":[],\"tag\":1},\"result\":\"\"},{\"id\":\"16054313639_0.6686853823569401\",\"conflict\":\"false\",\"code\":\"# Initialize LabelEncoder\\nle = LabelEncoder()\\n\\n# Encode categorical features\\ndf['feature1'] = le.fit_transform(df['feature1'])\\ndf['feature2'] = le.fit_transform(df['feature2'])\\ndf['label'] = le.fit_transform(df['label'])\\n\\n# Display the encoded DataFrame\\ndf.head()\",\"count\":6,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.41893164227931723\",\"conflict\":\"false\",\"code\":\"# Encoding Categorical Features\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Label Encoding\\\" width=\\\"32\\\" height=\\\"32\\\" />Label Encoding Documentation\\r\\n  <\/a>\\r\\n<\/div>\",\"count\":7,\"mode\":\"preview\",\"type\":\"markdown\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[],\"markdownCollapse\":{\"index\":1,\"isExpand\":false,\"hiddenCell\":[],\"tag\":1},\"result\":\"\"},{\"id\":\"16054313639_0.18096660741570103\",\"conflict\":\"false\",\"code\":\"# Split the data into training and testing sets\\nX = df.drop('label', axis=1)\\ny = df['label']\\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\",\"count\":8,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.7222336519201222\",\"conflict\":\"false\",\"code\":\"# Splitting Data\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Train-Test Split\\\" width=\\\"32\\\" height=\\\"32\\\" />Train-Test Split Documentation\\r\\n  <\/a>\\r\\n<\/div>\",\"count\":9,\"mode\":\"preview\",\"type\":\"markdown\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[],\"markdownCollapse\":{\"index\":2,\"isExpand\":false,\"hiddenCell\":[],\"tag\":1},\"result\":\"\"},{\"id\":\"16054313639_0.5579328650554016\",\"conflict\":\"false\",\"code\":\"# Initialize the Random Forest Classifier\\nrf = RandomForestClassifier(n_estimators=100, random_state=42)\\n\\n# Train the model\\nrf.fit(X_train, y_train)\",\"count\":10,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.8753747745220817\",\"conflict\":\"false\",\"code\":\"# Training the Model\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Random Forest Classifier\\\" width=\\\"32\\\" height=\\\"32\\\" />Random Forest Classifier Documentation\\r\\n  <\/a>\\r\\n<\/div>\",\"count\":11,\"mode\":\"preview\",\"type\":\"markdown\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[],\"markdownCollapse\":{\"index\":3,\"isExpand\":false,\"hiddenCell\":[],\"tag\":1},\"result\":\"\"},{\"id\":\"16054313639_0.7213233515588897\",\"conflict\":\"false\",\"code\":\"# Make predictions on the test set\\ny_pred = rf.predict(X_test)\",\"count\":12,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.96181555769281\",\"conflict\":\"false\",\"code\":\"# Making Predictions\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Random Forest Classifier\\\" width=\\\"32\\\" height=\\\"32\\\" />Random Forest Classifier Documentation\\r\\n  <\/a>\\r\\n<\/div>\\r\\n\",\"count\":13,\"mode\":\"preview\",\"type\":\"markdown\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[],\"markdownCollapse\":{\"index\":4,\"isExpand\":false,\"hiddenCell\":[],\"tag\":1},\"result\":\"\"},{\"id\":\"16054313639_0.5070072185957322\",\"conflict\":\"false\",\"code\":\"# Evaluate the model's performance\\naccuracy = accuracy_score(y_test, y_pred)\\nprint(f'Accuracy: {accuracy * 100:.2f}%')\",\"count\":14,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.6624425493198247\",\"conflict\":\"false\",\"code\":\"# Evaluating the Model\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.accuracy_score.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Accuracy Score\\\" width=\\\"32\\\" height=\\\"32\\\" />Accuracy Score Documentation\\r\\n  <\/a>\\r\\n<\/div>\",\"count\":15,\"mode\":\"preview\",\"type\":\"markdown\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[],\"markdownCollapse\":{\"index\":5,\"isExpand\":false,\"hiddenCell\":[],\"tag\":1},\"result\":\"\"},{\"id\":\"16054313639_0.8214364024304346\",\"conflict\":\"false\",\"code\":\"# Display feature importance\\nimportances = rf.feature_importances_\\nfeature_names = X.columns\\nfeature_importance_df = pd.DataFrame({'Feature': feature_names, 'Importance': importances})\\nfeature_importance_df.sort_values(by='Importance', ascending=False, inplace=True)\\nfeature_importance_df\",\"count\":16,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]},{\"id\":\"16054313639_0.24038484987536246\",\"conflict\":\"false\",\"code\":\"# Feature Importance\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"Random Forest Classifier\\\" width=\\\"32\\\" height=\\\"32\\\" />Random Forest Classifier Documentation\\r\\n  <\/a>\\r\\n<\/div>\",\"count\":17,\"mode\":\"preview\",\"type\":\"markdown\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[],\"result\":\"\"},{\"id\":\"16054313639_0.9120038910326758\",\"conflict\":\"false\",\"code\":\"# Hyperparameter Tuning\\r\\n\\r\\n(Optional) We can tune the hyperparameters of the Random Forest model to improve performance.\\r\\n\\r\\n<div>\\r\\n  <a target=\\\"_blank\\\" href=\\\"https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html\\\">\\r\\n    <img src=\\\"https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png\\\" alt=\\\"GridSearchCV\\\" width=\\\"32\\\" height=\\\"32\\\" />GridSearchCV Documentation\\r\\n  <\/a>\\r\\n<\/div>\",\"count\":18,\"mode\":\"preview\",\"type\":\"markdown\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[],\"markdownCollapse\":{\"index\":7,\"isExpand\":false,\"hiddenCell\":[],\"tag\":1},\"result\":\"\"},{\"id\":\"16054313639_0.2631846964101918\",\"conflict\":\"false\",\"code\":\"from Notebook.DSNotebook.NotebookExecutor import NotebookExecutor\\nnb = NotebookExecutor()\\ndf_PA_Data = nb.get_data('11111722937216409', '@SYS.USERID', 'True', {}, [], sheet_name = '')\\ndf_PA_Data\",\"count\":19,\"mode\":\"preview\",\"type\":\"code\",\"hover\":true,\"interrupt\":false,\"warning\":false,\"outputArray\":[],\"lineNumber\":false,\"laodmodel\":false,\"pre_cell_id\":0,\"is_pre_cell\":false,\"succORerr\":true,\"expand\":false,\"outputexpand\":false,\"readonly\":false,\"markDowns\":false,\"loader\":false,\"image\":\"\",\"error\":\"\",\"result\":\"\",\"algorithms\":\"\",\"semicolon\":\"\",\"cputimes\":\"\",\"showcputime\":false,\"secret\":[]}],\"kernalID\":\"ef17b0b6-a4ab-429b-8e18-360f2b0b66da\",\"Algorithms\":[],\"isScheduled\":0,\"last_modified_date\":\"\"}","isImported":0,"workSpaceKey":"","customComponentscript":"","description":"","lastcommittedDate":1733745833186,"isScheduled":null,"committedBy":524290,"type":1,"uuid":"11111733745833193","loggedUserId":null,"spaceKey":"1111","migrationId":null,"path":"","lastUpdatedDate":1740642865783,"createdDate":1733745833186,"createdBy":524290,"notebookName":"Random Forest Model ","id":16054313639,"projectId":15455307350,"isShared":null,"status":1}}